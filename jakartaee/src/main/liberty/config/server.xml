<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-10.0</feature>
        <feature>microProfile-6.0</feature>
        <feature>messaging-3.1</feature>
        <feature>mdb-4.0</feature>
        <feature>persistence-3.1</feature>
        <feature>adminCenter-1.0</feature>
    </featureManager>

    <administrator-role>
        <user>hanno</user>
    </administrator-role>

    <logging traceSpecification="eclipselink=all" />

    <messagingEngine>
        <queue id="awardsQueue" />
        <topic id="awardsTopic" />
    </messagingEngine>

    <jmsQueueConnectionFactory jndiName="jms/connectionFactory">
        <properties.wasJms remoteServerAddress="localhost:7276:BootStrapBasicMessaging" />
    </jmsQueueConnectionFactory>

    <jmsQueue id="awardsJmsQueue" jndiName="jms/awards">
        <properties.wasJms queueName="awardsQueue" />
    </jmsQueue>

    <jmsTopic id="awardsJmsTopic" jndiName="jms/awardsTopic">
        <properties.wasJms topicName="awardsTopic" />
    </jmsTopic>

    <jmsActivationSpec id="movies/awardsActivationSpec">
        <properties.wasJms destination="awardsJmsQueue" destinationType="jakarta.jms.Queue" />
    </jmsActivationSpec>

    <jmsActivationSpec id="movies/awardsTopicMovieMdb">
        <properties.wasJms destination="awardsJmsTopic" destinationType="jakarta.jms.Topic" />
    </jmsActivationSpec>

    <jmsActivationSpec id="movies/awardsTopicPeopleMdb">
        <properties.wasJms destination="awardsJmsTopic" destinationType="jakarta.jms.Topic" />
    </jmsActivationSpec>



    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm">
        <!--
        <user name="yourUserName" password="" />
        -->
        <user name="hanno" password="hermanus" />
    </basicRegistry>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443" />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Configures the application on a specified context root -->
    <webApplication contextRoot="/movies" location="movies.war" />

    <cors domain="/movies/api"
            allowedOrigins="http://localhost:4200"
            allowedMethods="GET, DELETE, POST, PUT, OPTIONS, HEAD"
            allowedHeaders="Referer, Content-Type, Accept, Authorization"
            allowCredentials="true"
            maxAge="3600"/>
</server>



    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" />

    <library id="jdbcLib">
        <fileset dir="jdbc" includes="*.jar"/>
    </library>

    <dataSource jndiName="jdbc/movies">
        <jdbcDriver libraryRef="jdbcLib"/>
        <properties serverName="localhost" portNumber="6306"
                    databaseName="movies"
                    user="root"
                    password="secure"/>
    </dataSource>
</server>
